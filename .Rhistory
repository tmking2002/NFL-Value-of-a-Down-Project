geom_text(size = 5, vjust = 2.5)
props <- merge(average_props %>% rename("avg_prop" = prop, "total_n" = n), props, by = c("start","end")) %>%
mutate(diff = prop - avg_prop)
plot_sequences <- function(props, title){
# Convert props dataframe to differences from league average
props <- merge(average_props %>% rename("avg_prop" = prop, "total_n" = n), props, by = c("start","end")) %>%
mutate(diff = prop - avg_prop)
# Creates labels of points in diagram
labels <- c("0-0","1-0","0-1","2-0","1-1","0-2","3-0","2-1","1-2","0-3",
"4-0","3-1","2-2","1-3","4-1","3-2","2-3","4-2","3-3")
# Initializes coordinates of data points
coords <- data.frame(label = labels,
x = c(1/8, 1/4, 1/4, 3/8, 3/8, 3/8, 1/2, 1/2, 1/2, 1/2,
5/8, 5/8, 5/8, 5/8, 3/4, 3/4, 3/4, 7/8, 7/8),
y = c(1/2, 3/5, 2/5, 7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 1/5, 9/10,
7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 7/10, 1/2))
# If the result is a K, node will be red, blue for BB
coords$result = case_when(substr(coords$label,3,3) == "3" ~ "K",
substr(coords$label,1,1) == "4" ~ "BB")
# Start and end points for arrows
plot_guide <- data.frame(start = c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,12,12,13,13,16,16),
end =   c(2,3,4,5,5,6,7,8,8,9,9,10,11,12,12,13,13,14,15,16,16,17,18,19))
plot_guide$start_count <- coords$label[plot_guide$start]
plot_guide$end_count <- coords$label[plot_guide$end]
# Initializes plot with nodes
plot <- ggplot(coords, aes(x = x, y = y, label = labels)) +
geom_point(size = 5, aes(color = result)) +
scale_color_manual(values = c("K" = "red",
"BB" = "blue",
"NA" = "grey")) +
geom_text(size = 5, vjust = 2.5)
for(i in 1:nrow(plot_guide)){
plot <- plot +
geom_segment(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$end[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$end[i]],
linewidth = props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] * 5)
if(substr(plot_guide$start_count[i],3,3) == "2"){
plot <- plot +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$start[i]] - .1,
linewidth = props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 5,
curvature = 1) +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]] - .1,
yend = coords$y[plot_guide$start[i]],
linewidth = props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 5,
curvature = 1)
}
}
plot <- plot +
theme_void() +
xlim(0, 1) +
ylim(0, 1) +
labs(title = title) +
theme(plot.title = element_text(hjust = 0.5))
table <- props %>%
mutate(diff = prop - average_props$prop[which(average_props$start == start & average_props$end == end)]) %>%
gt() %>%
tab_style(style = cell_fill(color = "#FF7276"),
locations = cells_body(columns = prop,
rows = diff > 0)) %>%
tab_style(style = cell_fill(color = "#26F7FD"),
locations = cells_body(columns = prop,
rows = diff < 0)) %>%
fmt_percent(3:4, decimals = 1) %>%
cols_hide(diff) %>%
tab_header(title = title)
return(list(plot,table))
}
trout_props <- find_proportions(trout)
trout_props <- trout_props %>% filter(!(end %in% c("HBP","BIP")))
trout_chart <- plot_sequences(trout_props,"Mike Trout")[1][[1]]
trout_chart
plot_sequences <- function(props, title){
# Convert props dataframe to differences from league average
props <- merge(average_props %>% rename("avg_prop" = prop, "total_n" = n), props, by = c("start","end")) %>%
mutate(diff = prop - avg_prop)
# Creates labels of points in diagram
labels <- c("0-0","1-0","0-1","2-0","1-1","0-2","3-0","2-1","1-2","0-3",
"4-0","3-1","2-2","1-3","4-1","3-2","2-3","4-2","3-3")
# Initializes coordinates of data points
coords <- data.frame(label = labels,
x = c(1/8, 1/4, 1/4, 3/8, 3/8, 3/8, 1/2, 1/2, 1/2, 1/2,
5/8, 5/8, 5/8, 5/8, 3/4, 3/4, 3/4, 7/8, 7/8),
y = c(1/2, 3/5, 2/5, 7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 1/5, 9/10,
7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 7/10, 1/2))
# If the result is a K, node will be red, blue for BB
coords$result = case_when(substr(coords$label,3,3) == "3" ~ "K",
substr(coords$label,1,1) == "4" ~ "BB")
# Start and end points for arrows
plot_guide <- data.frame(start = c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,12,12,13,13,16,16),
end =   c(2,3,4,5,5,6,7,8,8,9,9,10,11,12,12,13,13,14,15,16,16,17,18,19))
plot_guide$start_count <- coords$label[plot_guide$start]
plot_guide$end_count <- coords$label[plot_guide$end]
# Initializes plot with nodes
plot <- ggplot(coords, aes(x = x, y = y, label = labels)) +
geom_point(size = 5, aes(color = result)) +
scale_color_manual(values = c("K" = "red",
"BB" = "blue",
"NA" = "grey")) +
geom_text(size = 5, vjust = 2.5)
for(i in 1:nrow(plot_guide)){
plot <- plot +
geom_segment(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$end[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$end[i]],
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] * 5))
if(substr(plot_guide$start_count[i],3,3) == "2"){
plot <- plot +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$start[i]] - .1,
abs(linewidth = props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 5),
curvature = 1) +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]] - .1,
yend = coords$y[plot_guide$start[i]],
abs(linewidth = props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 5),
curvature = 1)
}
}
plot <- plot +
theme_void() +
xlim(0, 1) +
ylim(0, 1) +
labs(title = title) +
theme(plot.title = element_text(hjust = 0.5))
table <- props %>%
mutate(diff = prop - average_props$prop[which(average_props$start == start & average_props$end == end)]) %>%
gt() %>%
tab_style(style = cell_fill(color = "#FF7276"),
locations = cells_body(columns = prop,
rows = diff > 0)) %>%
tab_style(style = cell_fill(color = "#26F7FD"),
locations = cells_body(columns = prop,
rows = diff < 0)) %>%
fmt_percent(3:4, decimals = 1) %>%
cols_hide(diff) %>%
tab_header(title = title)
return(list(plot,table))
}
trout_chart <- plot_sequences(trout_props,"Mike Trout")[1][[1]]
plot_sequences <- function(props, title){
# Convert props dataframe to differences from league average
props <- merge(average_props %>% rename("avg_prop" = prop, "total_n" = n), props, by = c("start","end")) %>%
mutate(diff = prop - avg_prop)
# Creates labels of points in diagram
labels <- c("0-0","1-0","0-1","2-0","1-1","0-2","3-0","2-1","1-2","0-3",
"4-0","3-1","2-2","1-3","4-1","3-2","2-3","4-2","3-3")
# Initializes coordinates of data points
coords <- data.frame(label = labels,
x = c(1/8, 1/4, 1/4, 3/8, 3/8, 3/8, 1/2, 1/2, 1/2, 1/2,
5/8, 5/8, 5/8, 5/8, 3/4, 3/4, 3/4, 7/8, 7/8),
y = c(1/2, 3/5, 2/5, 7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 1/5, 9/10,
7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 7/10, 1/2))
# If the result is a K, node will be red, blue for BB
coords$result = case_when(substr(coords$label,3,3) == "3" ~ "K",
substr(coords$label,1,1) == "4" ~ "BB")
# Start and end points for arrows
plot_guide <- data.frame(start = c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,12,12,13,13,16,16),
end =   c(2,3,4,5,5,6,7,8,8,9,9,10,11,12,12,13,13,14,15,16,16,17,18,19))
plot_guide$start_count <- coords$label[plot_guide$start]
plot_guide$end_count <- coords$label[plot_guide$end]
# Initializes plot with nodes
plot <- ggplot(coords, aes(x = x, y = y, label = labels)) +
geom_point(size = 5, aes(color = result)) +
scale_color_manual(values = c("K" = "red",
"BB" = "blue",
"NA" = "grey")) +
geom_text(size = 5, vjust = 2.5)
for(i in 1:nrow(plot_guide)){
plot <- plot +
geom_segment(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$end[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$end[i]],
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] * 5))
if(substr(plot_guide$start_count[i],3,3) == "2"){
plot <- plot +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$start[i]] - .1,
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 5),
curvature = 1) +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]] - .1,
yend = coords$y[plot_guide$start[i]],
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 5),
curvature = 1)
}
}
plot <- plot +
theme_void() +
xlim(0, 1) +
ylim(0, 1) +
labs(title = title) +
theme(plot.title = element_text(hjust = 0.5))
table <- props %>%
mutate(diff = prop - average_props$prop[which(average_props$start == start & average_props$end == end)]) %>%
gt() %>%
tab_style(style = cell_fill(color = "#FF7276"),
locations = cells_body(columns = prop,
rows = diff > 0)) %>%
tab_style(style = cell_fill(color = "#26F7FD"),
locations = cells_body(columns = prop,
rows = diff < 0)) %>%
fmt_percent(3:4, decimals = 1) %>%
cols_hide(diff) %>%
tab_header(title = title)
return(list(plot,table))
}
trout_chart <- plot_sequences(trout_props,"Mike Trout")[1][[1]]
trout_chart
?geom_segment
plot_sequences <- function(props, title){
# Convert props dataframe to differences from league average
props <- merge(average_props %>% rename("avg_prop" = prop, "total_n" = n), props, by = c("start","end")) %>%
mutate(diff = prop - avg_prop)
# Creates labels of points in diagram
labels <- c("0-0","1-0","0-1","2-0","1-1","0-2","3-0","2-1","1-2","0-3",
"4-0","3-1","2-2","1-3","4-1","3-2","2-3","4-2","3-3")
# Initializes coordinates of data points
coords <- data.frame(label = labels,
x = c(1/8, 1/4, 1/4, 3/8, 3/8, 3/8, 1/2, 1/2, 1/2, 1/2,
5/8, 5/8, 5/8, 5/8, 3/4, 3/4, 3/4, 7/8, 7/8),
y = c(1/2, 3/5, 2/5, 7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 1/5, 9/10,
7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 7/10, 1/2))
# If the result is a K, node will be red, blue for BB
coords$result = case_when(substr(coords$label,3,3) == "3" ~ "K",
substr(coords$label,1,1) == "4" ~ "BB")
# Start and end points for arrows
plot_guide <- data.frame(start = c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,12,12,13,13,16,16),
end =   c(2,3,4,5,5,6,7,8,8,9,9,10,11,12,12,13,13,14,15,16,16,17,18,19))
plot_guide$start_count <- coords$label[plot_guide$start]
plot_guide$end_count <- coords$label[plot_guide$end]
# Initializes plot with nodes
plot <- ggplot(coords, aes(x = x, y = y, label = labels)) +
geom_point(size = 5, aes(color = result)) +
scale_color_manual(values = c("K" = "red",
"BB" = "blue",
"NA" = "grey")) +
geom_text(size = 5, vjust = 2.5)
for(i in 1:nrow(plot_guide)){
plot <- plot +
geom_segment(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$end[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$end[i]],
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] * 20),
color = sign(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])]))
if(substr(plot_guide$start_count[i],3,3) == "2"){
plot <- plot +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$start[i]] - .1,
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 20),
curvature = 1,
color = sign(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])])) +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]] - .1,
yend = coords$y[plot_guide$start[i]],
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 20),
curvature = 1,
color = sign(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])]))
}
}
plot <- plot +
theme_void() +
xlim(0, 1) +
ylim(0, 1) +
labs(title = title) +
theme(plot.title = element_text(hjust = 0.5))
table <- props %>%
mutate(diff = prop - average_props$prop[which(average_props$start == start & average_props$end == end)]) %>%
gt() %>%
tab_style(style = cell_fill(color = "#FF7276"),
locations = cells_body(columns = prop,
rows = diff > 0)) %>%
tab_style(style = cell_fill(color = "#26F7FD"),
locations = cells_body(columns = prop,
rows = diff < 0)) %>%
fmt_percent(3:4, decimals = 1) %>%
cols_hide(diff) %>%
tab_header(title = title)
return(list(plot,table))
}
trout_chart <- plot_sequences(trout_props,"Mike Trout")[1][[1]]
trout_chart
sign(props$diff[which(props$start == plot_guide$start_count[1] & props$end == plot_guide$end_count[1])])
sign(-10)
?sign
plot_sequences <- function(props, title){
# Convert props dataframe to differences from league average
props <- merge(average_props %>% rename("avg_prop" = prop, "total_n" = n), props, by = c("start","end")) %>%
mutate(diff = prop - avg_prop)
# Creates labels of points in diagram
labels <- c("0-0","1-0","0-1","2-0","1-1","0-2","3-0","2-1","1-2","0-3",
"4-0","3-1","2-2","1-3","4-1","3-2","2-3","4-2","3-3")
# Initializes coordinates of data points
coords <- data.frame(label = labels,
x = c(1/8, 1/4, 1/4, 3/8, 3/8, 3/8, 1/2, 1/2, 1/2, 1/2,
5/8, 5/8, 5/8, 5/8, 3/4, 3/4, 3/4, 7/8, 7/8),
y = c(1/2, 3/5, 2/5, 7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 1/5, 9/10,
7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 7/10, 1/2))
# If the result is a K, node will be red, blue for BB
coords$result = case_when(substr(coords$label,3,3) == "3" ~ "K",
substr(coords$label,1,1) == "4" ~ "BB")
# Start and end points for arrows
plot_guide <- data.frame(start = c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,12,12,13,13,16,16),
end =   c(2,3,4,5,5,6,7,8,8,9,9,10,11,12,12,13,13,14,15,16,16,17,18,19))
plot_guide$start_count <- coords$label[plot_guide$start]
plot_guide$end_count <- coords$label[plot_guide$end]
# Initializes plot with nodes
plot <- ggplot(coords, aes(x = x, y = y, label = labels)) +
geom_point(size = 5, aes(color = result)) +
scale_color_manual(values = c("K" = "red",
"BB" = "blue",
"NA" = "grey")) +
geom_text(size = 5, vjust = 2.5)
for(i in 1:nrow(plot_guide)){
plot <- plot +
geom_segment(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$end[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$end[i]],
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] * 20),
color = ifelse(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] > 0, 1, 0))
if(substr(plot_guide$start_count[i],3,3) == "2"){
plot <- plot +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$start[i]] - .1,
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 20),
curvature = 1,
color = ifelse(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] > 0, 1, 0)) +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]] - .1,
yend = coords$y[plot_guide$start[i]],
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 20),
curvature = 1,
color = ifelse(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] > 0, 1, 0))
}
}
plot <- plot +
theme_void() +
xlim(0, 1) +
ylim(0, 1) +
labs(title = title) +
theme(plot.title = element_text(hjust = 0.5))
table <- props %>%
mutate(diff = prop - average_props$prop[which(average_props$start == start & average_props$end == end)]) %>%
gt() %>%
tab_style(style = cell_fill(color = "#FF7276"),
locations = cells_body(columns = prop,
rows = diff > 0)) %>%
tab_style(style = cell_fill(color = "#26F7FD"),
locations = cells_body(columns = prop,
rows = diff < 0)) %>%
fmt_percent(3:4, decimals = 1) %>%
cols_hide(diff) %>%
tab_header(title = title)
return(list(plot,table))
}
trout_chart <- plot_sequences(trout_props,"Mike Trout")[1][[1]]
trout_chart
plot_sequences <- function(props, title){
# Convert props dataframe to differences from league average
props <- merge(average_props %>% rename("avg_prop" = prop, "total_n" = n), props, by = c("start","end")) %>%
mutate(diff = prop - avg_prop)
# Creates labels of points in diagram
labels <- c("0-0","1-0","0-1","2-0","1-1","0-2","3-0","2-1","1-2","0-3",
"4-0","3-1","2-2","1-3","4-1","3-2","2-3","4-2","3-3")
# Initializes coordinates of data points
coords <- data.frame(label = labels,
x = c(1/8, 1/4, 1/4, 3/8, 3/8, 3/8, 1/2, 1/2, 1/2, 1/2,
5/8, 5/8, 5/8, 5/8, 3/4, 3/4, 3/4, 7/8, 7/8),
y = c(1/2, 3/5, 2/5, 7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 1/5, 9/10,
7/10, 1/2, 3/10, 4/5, 3/5, 2/5, 7/10, 1/2))
# If the result is a K, node will be red, blue for BB
coords$result = case_when(substr(coords$label,3,3) == "3" ~ "K",
substr(coords$label,1,1) == "4" ~ "BB")
# Start and end points for arrows
plot_guide <- data.frame(start = c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,12,12,13,13,16,16),
end =   c(2,3,4,5,5,6,7,8,8,9,9,10,11,12,12,13,13,14,15,16,16,17,18,19))
plot_guide$start_count <- coords$label[plot_guide$start]
plot_guide$end_count <- coords$label[plot_guide$end]
# Initializes plot with nodes
plot <- ggplot(coords, aes(x = x, y = y, label = labels)) +
geom_point(size = 5, aes(color = result)) +
scale_color_manual(values = c("K" = "red",
"BB" = "blue",
"NA" = "grey")) +
geom_text(size = 5, vjust = 2.5)
for(i in 1:nrow(plot_guide)){
plot <- plot +
geom_segment(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$end[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$end[i]],
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] * 20),
color = ifelse(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] > 0, "green", "red"))
if(substr(plot_guide$start_count[i],3,3) == "2"){
plot <- plot +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]],
yend = coords$y[plot_guide$start[i]] - .1,
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 20),
curvature = 1,
color = ifelse(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] > 0, "green", "red")) +
geom_curve(x = coords$x[plot_guide$start[i]],
xend = coords$x[plot_guide$start[i]],
y = coords$y[plot_guide$start[i]] - .1,
yend = coords$y[plot_guide$start[i]],
linewidth = abs(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$start_count[i])] * 20),
curvature = 1,
color = ifelse(props$diff[which(props$start == plot_guide$start_count[i] & props$end == plot_guide$end_count[i])] > 0, "green", "red"))
}
}
plot <- plot +
theme_void() +
xlim(0, 1) +
ylim(0, 1) +
labs(title = title) +
theme(plot.title = element_text(hjust = 0.5))
table <- props %>%
mutate(diff = prop - average_props$prop[which(average_props$start == start & average_props$end == end)]) %>%
gt() %>%
tab_style(style = cell_fill(color = "#FF7276"),
locations = cells_body(columns = prop,
rows = diff > 0)) %>%
tab_style(style = cell_fill(color = "#26F7FD"),
locations = cells_body(columns = prop,
rows = diff < 0)) %>%
fmt_percent(3:4, decimals = 1) %>%
cols_hide(diff) %>%
tab_header(title = title)
return(list(plot,table))
}
trout_chart <- plot_sequences(trout_props,"Mike Trout")[1][[1]]
trout_chart
late_game_chart <- plot_sequences(late_game_props,"Late Game")[1][[1]]
late_game <- data %>%
filter(INN_CT == 9 &
abs(as.numeric(HOME_SCORE_CT) - as.numeric(AWAY_SCORE_CT)) <= 1)
late_game_props <- find_proportions(late_game)
late_game_props <- late_game_props %>% filter(!(end %in% c("HBP","BIP")))
late_game_chart <- plot_sequences(late_game_props,"Late Game")[1][[1]]
ggsave("Mike Trout Pitch Sequence Chart.png",trout_chart)
late_game_chart
ggsave("Late Game Pitch Sequence Chart.png",late_game_chart)
RR <- find_proportions(data %>% filter(PIT_HAND_CD == "R" & BAT_HAND_CD == "R")) %>% rename("RR_prop" = prop, "RR_n" = n)
RL <- find_proportions(data %>% filter(PIT_HAND_CD == "R" & BAT_HAND_CD == "L")) %>% rename("RL_prop" = prop, "RL_n" = n)
LR <- find_proportions(data %>% filter(PIT_HAND_CD == "L" & BAT_HAND_CD == "R")) %>% rename("LR_prop" = prop, "LR_n" = n)
LL <- find_proportions(data %>% filter(PIT_HAND_CD == "L" & BAT_HAND_CD == "L")) %>% rename("LL_prop" = prop, "LL_n" = n)
platoon <- reduce(list(RR,RL,LR,LL),full_join, by = c("start","end")) %>%
mutate(avg = (RR_prop * RR_n + RL_prop * RL_n + LR_prop * LR_n + LL_prop * LL_n) / (RR_n + RL_n + LR_n + LL_n))
prop.test(platoon %>% filter(start == "0-0" & end == "0-1") %>% select(ends_with("prop")) * platoon %>% filter(start == "0-0" & end == "0-1") %>% select(ends_with("n")),
platoon %>% filter(start == "0-0" & end == "0-1") %>% select(ends_with("n")))
prop.test(platoon %>% filter(start == "0-0" & end == "0-1") %>% select(ends_with("prop")) * platoon %>% filter(start == "0-0" & end == "0-1") %>% select(ends_with("n")),
platoon %>% filter(start == "0-0" & end == "0-1") %>% select(ends_with("n"))) -> test
test$p.value
platoon
platoon <- reduce(list(RR,RL,LR,LL),full_join, by = c("start","end")) %>%
mutate(avg = (RR_prop * RR_n + RL_prop * RL_n + LR_prop * LR_n + LL_prop * LL_n) / (RR_n + RL_n + LR_n + LL_n),
p = prop.test(c(RR_prop,RL_prop,LR_prop,LL_prop), c(RR_n,RL_n,LR_n,LL_n)))
platoon <- reduce(list(RR,RL,LR,LL),full_join, by = c("start","end")) %>%
mutate(avg = (RR_prop * RR_n + RL_prop * RL_n + LR_prop * LR_n + LL_prop * LL_n) / (RR_n + RL_n + LR_n + LL_n),
p = prop.test(c(RR_prop,RL_prop,LR_prop,LL_prop), c(RR_n,RL_n,LR_n,LL_n))$p.value)
View(platoon)
platoon <- reduce(list(RR,RL,LR,LL),full_join, by = c("start","end")) %>%
mutate(avg = (RR_prop * RR_n + RL_prop * RL_n + LR_prop * LR_n + LL_prop * LL_n) / (RR_n + RL_n + LR_n + LL_n),
p = prop.test(c(RR_prop,RL_prop,LR_prop,LL_prop), c(RR_n,RL_n,LR_n,LL_n))$p.value)
warning()
platoon <- reduce(list(RR,RL,LR,LL),full_join, by = c("start","end")) %>%
mutate(avg = (RR_prop * RR_n + RL_prop * RL_n + LR_prop * LR_n + LL_prop * LL_n) / (RR_n + RL_n + LR_n + LL_n),
p = c(RR_prop,RL_prop,LR_prop,LL_prop))
platoon <- reduce(list(RR,RL,LR,LL),full_join, by = c("start","end")) %>%
mutate(avg = (RR_prop * RR_n + RL_prop * RL_n + LR_prop * LR_n + LL_prop * LL_n) / (RR_n + RL_n + LR_n + LL_n),
p = RR_prop,RL_prop,LR_prop,LL_prop)
platoon <- reduce(list(RR,RL,LR,LL),full_join, by = c("start","end")) %>%
mutate(avg = (RR_prop * RR_n + RL_prop * RL_n + LR_prop * LR_n + LL_prop * LL_n) / (RR_n + RL_n + LR_n + LL_n),
p = vector(RR_prop,RL_prop,LR_prop,LL_prop))
platoon <- reduce(list(RR,RL,LR,LL),full_join, by = c("start","end")) %>%
mutate(avg = (RR_prop * RR_n + RL_prop * RL_n + LR_prop * LR_n + LL_prop * LL_n) / (RR_n + RL_n + LR_n + LL_n),
p = as.numeric(c(RR_prop,RL_prop,LR_prop,LL_prop)))
library(tidyverse)
library(nflfastR)
library(gt)
library(gtExtras)
pbp <- load_pbp()
setwd("~/Desktop/Projects/NFL Down Analysis/Value-of-a-Down-Project")
data <- read_csv("NFL 2022 Conversions Data.csv")
View(data)
setwd("~/Desktop/Projects/NFL Down Analysis/Value-of-a-Down-Project")
pbp <- read_csv("NFL 2022 Conversions Data.csv")
penalties <- pbp %>%
filter(str_detect(tolower(desc), "penalty"))
